{"version":3,"file":"IdentityBadgePopover.js","sources":["../src/components/IdentityBadge/IdentityBadgePopover.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from '../../proptypes'\nimport { GU } from '../../style'\nimport { blockExplorerUrl } from '../../utils'\nimport AddressField from '../AddressField/AddressField'\nimport BadgePopoverBase from '../BadgeBase/BadgePopoverBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Link from '../Link/Link'\nimport Tag from '../Tag/Tag'\nimport { capitalize } from '../../utils/characters'\n\nconst IdentityBadgePopover = React.memo(function IdentityBadgePopover({\n  address,\n  connectedAccount,\n  explorerProvider,\n  networkType,\n  onClose,\n  opener,\n  popoverAction,\n  title,\n  visible,\n}) {\n  const etherscanUrl = blockExplorerUrl('address', address, {\n    networkType,\n    provider: explorerProvider,\n  })\n\n  return (\n    <BadgePopoverBase\n      addressField={<AddressField address={address} />}\n      link={\n        etherscanUrl && (\n          <Link href={etherscanUrl}>\n            See on {capitalize(explorerProvider ?? 'blockscout')}\n          </Link>\n        )\n      }\n      onClose={onClose}\n      opener={opener}\n      popoverAction={popoverAction}\n      title={title}\n      titleTag={\n        connectedAccount && (\n          <Tag\n            css={`\n              margin-left: ${1 * GU}px;\n            `}\n            title=\"This is your Ethereum address\"\n          >\n            you\n          </Tag>\n        )\n      }\n      visible={visible}\n    />\n  )\n})\nIdentityBadgePopover.propTypes = {\n  address: PropTypes.string,\n  connectedAccount: PropTypes.bool,\n  explorerProvider: PropTypes.string,\n  networkType: PropTypes.string,\n  onClose: PropTypes.func,\n  opener: PropTypes._element,\n  popoverAction: BadgePopoverActionType,\n  title: PropTypes.node,\n  visible: PropTypes.bool,\n}\nIdentityBadgePopover.defaultProps = {\n  title: 'Address',\n}\n\nexport default IdentityBadgePopover\n"],"names":["IdentityBadgePopover","React","memo","address","connectedAccount","explorerProvider","networkType","onClose","opener","popoverAction","title","visible","etherscanUrl","blockExplorerUrl","provider","BadgePopoverBase","AddressField","Link","capitalize","GU","propTypes","PropTypes","string","bool","func","_element","BadgePopoverActionType","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAMA,oBAAoB,GAAGC,cAAK,CAACC,IAAN,CAAW,SAASF,oBAAT,OAUrC;AAAA,MATDG,OASC,QATDA,OASC;AAAA,MARDC,gBAQC,QARDA,gBAQC;AAAA,MAPDC,gBAOC,QAPDA,gBAOC;AAAA,MANDC,WAMC,QANDA,WAMC;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,OACC,QADDA,OACC;AACD,MAAMC,YAAY,GAAGC,qBAAgB,CAAC,SAAD,EAAYV,OAAZ,EAAqB;AACxDG,IAAAA,WAAW,EAAXA,WADwD;AAExDQ,IAAAA,QAAQ,EAAET;AAF8C,GAArB,CAArC;AAKA,sBACEJ,6BAACc,wBAAD;AACE,IAAA,YAAY,eAAEd,6BAACe,oBAAD;AAAc,MAAA,OAAO,EAAEb;AAAvB,MADhB;AAEE,IAAA,IAAI,EACFS,YAAY,iBACVX,6BAACgB,YAAD;AAAM,MAAA,IAAI,EAAEL;AAAZ,kBACUM,qBAAU,CAACb,gBAAD,aAACA,gBAAD,cAACA,gBAAD,GAAqB,YAArB,CADpB,CAJN;AASE,IAAA,OAAO,EAAEE,OATX;AAUE,IAAA,MAAM,EAAEC,MAVV;AAWE,IAAA,aAAa,EAAEC,aAXjB;AAYE,IAAA,KAAK,EAAEC,KAZT;AAaE,IAAA,QAAQ,EACNN,gBAAgB,iBACdH;AAIE,MAAA,KAAK,EAAC,+BAJR;AAAA,YAEmB,IAAIkB;AAFvB,aAfN;AAyBE,IAAA,OAAO,EAAER;AAzBX,IADF;AA6BD,CA7C4B,CAA7B;AA8CAX,oBAAoB,CAACoB,SAArB,GAAiC;AAC/BjB,EAAAA,OAAO,EAAEkB,mBAAS,CAACC,MADY;AAE/BlB,EAAAA,gBAAgB,EAAEiB,mBAAS,CAACE,IAFG;AAG/BlB,EAAAA,gBAAgB,EAAEgB,mBAAS,CAACC,MAHG;AAI/BhB,EAAAA,WAAW,EAAEe,mBAAS,CAACC,MAJQ;AAK/Bf,EAAAA,OAAO,EAAEc,mBAAS,CAACG,IALY;AAM/BhB,EAAAA,MAAM,EAAEa,mBAAS,CAACI,QANa;AAO/BhB,EAAAA,aAAa,EAAEiB,8BAPgB;AAQ/BhB,EAAAA,KAAK,EAAEW,mBAAS,CAACM,IARc;AAS/BhB,EAAAA,OAAO,EAAEU,mBAAS,CAACE;AATY,CAAjC;AAWAvB,oBAAoB,CAAC4B,YAArB,GAAoC;AAClClB,EAAAA,KAAK,EAAE;AAD2B,CAApC;;;;"}